#BlueJ class context
comment0.target=EnemyTurret
comment0.text=\r\n\ <p><b>File\ name\:\ </b>\ EnemyTurret.java\r\n\ @version\ 1.1\r\n\ @since\ 07.06.2018\r\n\ <p><b>Last\ modification\ date\:\ </b>\ 14.09.2018\r\n\ @author\ Alexandru\ F.\ Dascalu\r\n\ <p><b>Copyright\ (C)</b>\ 2018\ \ Alexandru\ F.\ Dascalu\r\n\ \r\n\ <p>EnemyTurret.java\ is\ part\ of\ Panzer\ Batallion.\r\n\ Panzer\ Batallion\ is\ free\ software\:\ you\ can\ redistribute\ it\ and/or\ modify\r\n\ it\ under\ the\ terms\ of\ the\ GNU\ General\ Public\ License\ as\ published\ by\r\n\ the\ Free\ Software\ Foundation,\ either\ version\ 3\ of\ the\ License,\ or\r\n\ (at\ your\ option)\ any\ later\ version.\r\n\ \r\n\ <p>This\ program\ is\ distributed\ in\ the\ hope\ that\ it\ will\ be\ useful,\r\n\ but\ WITHOUT\ ANY\ WARRANTY;\ without\ even\ the\ implied\ warranty\ of\r\n\ MERCHANTABILITY\ or\ FITNESS\ FOR\ A\ PARTICULAR\ PURPOSE.\ \ See\ the\r\n\ GNU\ General\ Public\ License\ for\ more\ details.\r\n\ \r\n\ <p>You\ should\ have\ received\ a\ copy\ of\ the\ GNU\ General\ Public\ License\ v3\r\n\ along\ with\ this\ program.\ \ If\ not,\ see\ <a\ href\="https\://www.gnu.org/licenses/">https\://www.gnu.org/licenses/</a>\ .\r\n\ \r\n\ <p>A\ summary\ of\ the\ license\ can\ be\ found\ here\:\ \r\n\ <a\ href\="https\://choosealicense.com/licenses/gpl-3.0/">https\://choosealicense.com/licenses/gpl-3.0/</a>\ .\r\n\ \r\n\ <p><b>Purpose\:\ </b>\r\n\ <p>\ This\ class\ models\ an\ enemy\ turret\ for\ a\ Greenfoot\ recreation\ of\ \r\n\ the\ Wii\ Tanks\ game\ for\ the\ Nintendo\ Wii.\ It\ contains\ code\ used\ by\ all\ enemy\ \r\n\ turrets\ to\ detect\ the\ player\ tank\ and\ fire\ a\ shell.\ It's\ line\ of\r\n\ sight\ bounces\ off\ walls\ as\ many\ times\ as\ the\ shells\ each\ type\ of\ enemy\ turret\ fires.\r\n\ If\ it\ detects\ the\ player,\ it\ fires\ a\ shell,\ unless\ it\ already\ has\r\n\ an\ x\ amount\ (depends\ on\ the\ subtype)\ shells\ fired\ by\ it\ still\ in\ the\ world.\ It\ \r\n\ also\ has\ a\ cooldown\ period,\ after\ which\ it\ will\ not\ fire\ another\ shell\ (each\ \r\n\ subtype\ has\ a\ different\ value\ for\ this\ period).\r\n\ \r\n\ <p><b>Version\ History</b>\r\n\ <p>\t-1.0\ -\ Created\ the\ class.\r\n\ <p>\t-1.1\ -\ Changed\ the\ code\ to\ allow\ enemy\ turrets\ to\ fire\ normal\ shells\ or\ \r\n\ rocket\ shells\ also.\r\n
comment1.params=tank
comment1.target=EnemyTurret(Tank)
comment1.text=\r\n\ Makes\ a\ new\ enemy\ Turret\ on\ the\ Tank\ given\ as\ an\ argument.\r\n\ @param\ tank\ The\ Tank\ on\ which\ this\ Turret\ will\ pe\ placed.\r\n
comment10.params=
comment10.target=int\ getAimAngle()
comment10.text=\r\n\ Gets\ the\ size\ in\ degrees\ of\ the\ angle\ of\ an\ imaginary\ cone\ whose\ axis\ extends\r\n\ to\ the\ position\ of\ the\ player\ tank.\ Within\ this\ angle\ of\ the\ cone\ the\ turret\ moves\ \r\n\ randomly,\ unless\ you\ override\ calculateNextRotation\ so\ that\ the\ turret\ \r\n\ will\ no\ longer\ follow\ the\ player.\ Returns\ 360\ unless\ overridden,\ so\ the\ \r\n\ turret\ would\ aim\ around\ randomly.\r\n\ @return\ The\ aim\ angle\ of\ this\ type\ of\ turret\ in\ relation\ to\ the\ player\ tank.\r\n
comment2.params=world
comment2.target=void\ addedToWorld(greenfoot.World)
comment2.text=\r\n\ Prepares\ this\ turret\ to\ be\ added\ in\ the\ game\ world.\r\n
comment3.params=
comment3.target=void\ fire()
comment3.text=\r\n\ Fires\ a\ shell\ if\ it\ has\ detected\ the\ player,\ if\ the\ cool\ down\ period\ has\r\n\ passed\ and\ if\ the\ limit\ of\ live\ shells\ in\ the\ world\ fire\ by\ this\ turret\r\n\ has\ not\ been\ reached.\r\n
comment4.params=
comment4.target=void\ aim()
comment4.text=\r\n\ Moves\ the\ turret\ around,\ according\ to\ what\ the\ calculateTurn()\ method\ \r\n\ sets\ the\ next\ rotation\ of\ this\ turret\ as.\r\n
comment5.params=
comment5.target=boolean\ detectPlayer()
comment5.text=\r\n\ Method\ detects\ if\ the\ player\ tank\ is\ in\ the\ line\ of\ fire\ of\ this\ turret.\r\n\ @return\ True\ if\ the\ player\ tank\ is\ in\ the\ line\ of\ fire\ of\ this\ turret,\r\n\ false\ if\ not\ or\ if\ the\ shell\ would\ hit\ another\ enemy\ tank\ before\ it\ would\r\n\ hit\ the\ player.\r\n
comment6.params=
comment6.target=void\ calculateNextRotation()
comment6.text=Calculates\ where\ the\ turret\ should\ turn\ next.\ It\ modifies\ the\ nextRotation\r\n\ attribute.\ Makes\ the\ turret\ follow\ the\ player\ around,\ it\ does\ not\ point\ at\ \r\nthe\ player\ exactly,\ but\ with\ a\ random\ offset.
comment7.params=
comment7.target=int\ getTurnDirection()
comment7.text=\r\n\ Calculates\ which\ way\ the\ turret\ should\ turn\ so\ that\ it\ turns\ towards\ \r\n\ its\ target\ rotation.\r\n\ @return\ -1\ if\ the\ target\ rotation\ is\ to\ the\ left,\ 1\ if\ it\ is\ to\ the\ right,\r\n\ 0\ if\ the\ turret\ has\ arrived\ at\ its\ desired\ rotation.\r\n
comment8.params=
comment8.target=int\ getShellBounceLimit()
comment8.text=\r\n\ Gets\ the\ maximum\ number\ of\ times\ a\ shell\ fired\ by\ this\ turret\ can\ bounce.\r\n\ Returns\ the\ bounce\ limit\ of\ the\ type\ of\ shells\ fired\ by\ this\ turret.\r\n\ @return\ The\ bounce\ limit\ of\ the\ type\ of\ shells\ fired\ by\ this\ turret.\r\n
comment9.params=
comment9.target=int\ getFireCooldown()
comment9.text=Gets\ the\ cool\ down\ period(in\ milliseconds)\ after\ which\ this\ turret\ can\ \r\n\ fire\ another\ shell.\ This\ period\ is\ a\ static\ variable\ and\ is\ the\ same\ for\r\n\ all\ objects\ of\ this\ class.\ It\ returns\ the\ maximum\ value\ of\ an\ integer\ so\ \r\n\ that\ it\ will\ not\ fire\ a\ shell\ until\ the\ game\ is\ played\ for\ 600\ hours\ \r\n\ non-stop,\ unless\ the\ is\ overridden.\r\n\ @return\ The\ period\ in\ milliseconds\ after\ which\ this\ turret\ can\ fire\ another\r\nshell.
numComments=11
