#BlueJ class context
comment0.target=MobileEnemyTank
comment0.text=\r\n\ <p><b>File\ name\:\ </b>\ MobileEnemyTank.java\r\n\ @version\ 1.2\r\n\ @since\ 14.08.2018\r\n\ <p><p><b>Last\ modification\ date\:\ </b>\ 03.09.2018\r\n\ @author\ Alexandru\ F.\ Dascalu\r\n\ <p><b>Copyright\:\ </b>\r\n\ <p>No\ copyright.\r\n\ \r\n\ <p><b>Purpose\:\ </b>\r\n\ <p>\ This\ class\ models\ a\ mobile\ enemy\ tank\ for\ a\ Greenfoot\ recreation\ of\ the\ \r\n\ Wii\ Tanks\ game\ for\ the\ Nintendo\ Wii.\ By\ default,\ it\ generates\ a\ path\ to\ \r\n\ follow\ in\ the\ game\ world\ using\ the\ world's\ graph,\ follows\ it,\ decides\ to\ \r\n\ move\ while\ turning\ or\ not,\ plays\ a\ sound\ when\ moving\ and\ tells\ it's\ turret\ \r\n\ to\ aim\ and\ fire.\ It\ is\ meant\ to\ be\ inherited\ always\ and\ you\ should\ not\ have\r\n\ an\ actor\ that\ is\ just\ a\ MobileEnemyTank\ object\ since\ the\ class\ was\ not\ meant\r\n\ to\ be\ used\ in\ this\ way.\r\n\ \r\n\ <p><b>Version\ History</b>\r\n\ <p>\t-1.0\ -\ Created\ the\ class.\r\n\ <p>\t-1.1\ -\ Made\ the\ tanks\ move\ more\ naturally\ by\ being\ able\ to\ move\ while\r\n\ \ turning\ if\ they\ can\ still\ get\ to\ the\ desired\ rotation\ by\ doing\ so\ and\ made\r\n\ \ the\ tank\ register\ reaching\ a\ point\ by\ being\ close\ to\ it,\ and\ not\ \r\n\ \ necessarily\ at\ the\ exact\ coordinates.\r\n\ \ <p>\t-1.2\ -\ Made\ tanks\ not\ run\ into\ walls\ when\ they\ move\ while\ turning.\r\n
comment1.params=startX\ startY
comment1.target=MobileEnemyTank(int,\ int)
comment1.text=\r\n\ Makes\ a\ new\ Mobile\ Enemy\ Tank\ whose\ starting\ location\ in\ the\ level\ is\ at\r\n\ the\ given\ coordinates.\r\n\ @param\ startX\ The\ x\ coordinate\ of\ the\ initial\ position\ of\ the\ tank\ in\ \r\n\ the\ level.\r\n\ @param\ startY\ The\ y\ coordinate\ of\ the\ initial\ position\ of\ the\ tank\ in\ \r\n\ the\ level.\r\n
comment10.params=
comment10.target=boolean\ isMoving()
comment10.text=\r\n\ Checks\ if\ the\ tank\ is\ moving.\r\n\ @return\ True\ if\ the\ tank\ is\ moving,\ false\ if\ not.\ Returns\ a\ boolean\ set\ \r\n\ according\ to\ the\ tank's\ movements\ in\ the\ private\ methods\ that\ control\r\n\ this\ tank's\ movements.\r\n
comment11.params=
comment11.target=boolean\ isMovingForward()
comment11.text=\r\n\ Checks\ if\ the\ tank\ is\ moving\ forward.\r\n\ @return\ True\ if\ the\ tank\ is\ moving\ forward,\ false\ if\ not.\ Returns\ a\ \r\n\ boolean\ set\ according\ to\ the\ tank's\ movements\ in\ the\ private\ methods\r\n\ that\ control\ this\ tank's\ movements.\r\n
comment12.params=
comment12.target=boolean\ isMovingBackward()
comment12.text=\r\n\ Checks\ if\ the\ tank\ is\ moving\ backward.\r\n\ @return\ True\ if\ the\ tank\ is\ moving\ backward,\ false\ if\ not.\ Returns\ a\ \r\n\ boolean\ set\ according\ to\ the\ tank's\ movements\ in\ the\ private\ methods\r\n\ that\ control\ this\ tank's\ movements.\r\n
comment2.params=
comment2.target=void\ act()
comment2.text=\r\n\ Act\ -\ do\ whatever\ the\ Mobile\ Enemy\ Tank\ wants\ to\ do.\ This\ method\ is\ \r\n\ called\ whenever\ the\ 'Act'\ or\ 'Run'\ button\ gets\ pressed\ in\ the\ \r\n\ environment.\ In\ this\ case,\ this\ method\ makes\ the\ tank\ generate\ a\ path\ \r\n\ to\ a\ point\ in\ the\ game\ world\ if\ none\ exists\ or\ follow\ the\ current\ path,\r\n\ after\ which\ the\ super\ type\ act()\ method\ is\ called.\r\n
comment3.params=
comment3.target=void\ generatePath()
comment3.text=Generates\ a\ path\ to\ a\ destination\ point\ in\ the\ game\ world\ for\ the\ tank\ \r\nto\ follow.
comment4.params=
comment4.target=GraphPoint\ chooseDestinationPoint()
comment4.text=Chooses\ a\ random\ destination\ point\ for\ the\ tank\ to\ get\ to.
comment5.params=
comment5.target=void\ followPath()
comment5.text=Makes\ the\ tank\ follow\ the\ path\ by\ passing\ by\ each\ node\ in\ the\ path\ until\r\nthe\ destination\ is\ reached.
comment6.params=point
comment6.target=boolean\ reachedPoint(GraphPoint)
comment6.text=\r\n\ Detects\ if\ this\ tank\ has\ reached\ a\ point\ in\ the\ world\ graph,\ meaning\ it\ \r\n\ is\ within\ a\ certain\ distance\ from\ that\ node's\ coordinates.\r\n\ @param\ point\ A\ point\ in\ the\ world\ graph\ the\ tank\ wants\ to\ reach.\r\n\ @return\ True\ if\ the\ tank\ has\ reached,\ false\ if\ not.\r\n
comment7.params=nextPoint
comment7.target=int\ calculateTargetRotation(GraphPoint)
comment7.text=\r\n\ Calculates\ the\ rotation\ this\ tank\ needs\ to\ have\ to\ turn\ toward\ the\ \r\n\ given\ graph\ point.\r\n\ @param\ nextPoint\ The\ point\ this\ tank\ wants\ to\ turn\ towards.\r\n\ @return\ The\ rotation,\ from\ 0\ to\ 359,\ this\ needs\ to\ have.\r\n
comment8.params=targetRotation
comment8.target=int\ calculateTurn(int)
comment8.text=\r\n\ Calculates\ which\ way\ and\ how\ much\ this\ tank\ should\ turn\ to\ get\ to\ the\ \r\n\ desired\ target\ rotation.\r\n\ @param\ targetRotation\ The\ rotation\ the\ tank\ needs\ to\ get\ to\ in\ order\ to\r\n\ reach\ the\ next\ GraphPoint.\r\n\ @return\ The\ amount\ in\ degrees\ the\ tank\ should\ turn\ in\ this\ call\ of\ the\ \r\n\ act()\ method.\ Negative\ values\ mean\ the\ tank\ will\ turn\ counter\ clockwise,\r\n\ positive\ values\ clockwise.\r\n
comment9.params=targetRotation\ nextPoint
comment9.target=boolean\ canMoveWhileTurning(int,\ GraphPoint)
comment9.text=\r\n\ Decides\ whether\ this\ tank\ can\ move\ while\ it\ is\ turning.\ Sometimes\ if\ \r\n\ the\ tank\ does\ that\ it\ cannot\ reached\ the\ rotation\ towards\ the\ next\ \r\n\ point\ or\ it\ runs\ into\ a\ wall.\ So\ it\ is\ necessary\ to\ check\ this\ tank\ \r\n\ can\ move\ while\ turning\ before\ doing\ so.\r\n\ @param\ targetRotation\ The\ rotation\ this\ tank\ needs\ to\ get\ to.\r\n\ @param\ nextPoint\ The\ graphPoint\ whose\ position\ this\ tank\ needs\ to\ reach.\r\n\ @return\ True\ if\ this\ tank\ can\ safely\ move\ while\ turning,\ false\ if\ not.\r\n
numComments=13
